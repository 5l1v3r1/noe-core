#!/bin/sh
# Copyright(c) 2010 Red Hat, Inc.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library in the file COPYING.LIB;
# if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
#
# RHATews Post install script
#

if [ ".$INSTALL_ROOT" = . ]
then
    c="`pwd`"
    cd ..
    INSTALL_ROOT="`pwd`"
    cd $c
fi


if [ -d /usr/xpg4/bin ]; then
    PATH=/usr/xpg4/bin:$PATH
    export PATH
fi

if type printf > /dev/null; then
    XBECHO="printf"
elif [ -x /usr/ucb/echo ]; then
    XBECHO="/usr/ucb/echo -n"
else
    XBECHO="echo"
fi

if [ ".`id -nu`" = .root ]; then
    SUGID=root
else
    "This script must bust be run as superuser" >&2
    exit 1
fi

check_java_home="no"

setattributes()
{
    chmod $1 "$4" 2>/dev/null || true
    chown $2:$3 "$4" 2>/dev/null || true
}

dirattributes()
{
    if [ -d "$4" ]; then
        chmod $1 "$4" 2>/dev/null || true
        chown -R $2:$3 "$4" 2>/dev/null || true
        (
            cd "$4"
            find . -type d -exec chmod $1 '{}' \;
        )
    fi
}

createsymlink()
{
    rm -rf $2 >/dev/null 2>&1 || true
    ln -sf "$1" $2
}

createbasedir()
{
    if [ ! -d "$1" ]; then
        mkdir -p "$1"
        if [ $? -ne 0 ]; then
            exit $?
        fi
    fi
}

copynoreplace()
{
    if [ ! -f "$1" ]; then
        mv "$1.in" "$1" >/dev/null 2>&1 || true
    else
        rm -f "$1.in" >/dev/null 2>&1 || true
    fi
}

#
# Fix directory permissions
#
if [ -d "$INSTALL_ROOT" ]; then
    if [ -f "$INSTALL_ROOT/etc/.postinstall.done" ]; then
        "Package RHATews already installed in : $INSTALL_ROOT" >&2
        exit 17
    else
    (
        cd "$INSTALL_ROOT"
        find . -type d -exec chmod 755 '{}' \;
    )
    fi
else
    "Unknown package base directory : $INSTALL_ROOT" >&2
    exit 20
fi

if [ ".$LD_LIBRARY_PATH" = . ]; then
    LD_LIBRARY_PATH="$INSTALL_ROOT/lib64"
else
    LD_LIBRARY_PATH="$INSTALL_ROOT/lib64:$LD_LIBRARY_PATH"
fi
export LD_LIBRARY_PATH

#
# RHATews OpenSSL post install script
#

setattributes 0755 root $SUGID "$INSTALL_ROOT/etc/ssl"
setattributes 0755 root $SUGID "$INSTALL_ROOT/etc/ssl/certs"
setattributes 0700 root $SUGID "$INSTALL_ROOT/etc/ssl/CA"
setattributes 0700 root $SUGID "$INSTALL_ROOT/etc/ssl/private"

#
# RHATews Apache Httpd post install script
#
# Add the "apache" user
apache_uid=48

if [ -x /sbin/nologin ]; then
    useshell="/sbin/nologin"
else
    useshell="/bin/sh"
fi
apache_osu="`id -u apache 2>/dev/null`"
apache_osg="`id -g apache 2>/dev/null`"
if [ ".$apache_osg" = . ]; then
    apache_osg=$apache_uid
    /usr/sbin/groupadd -g $apache_osg apache 2> /dev/null || true
    if [ $? -eq 0 ]; then
        echo "Apache group (id=$apache_osg) created."
    fi
else
    echo "Apache group (id=$apache_osu) already exists."
fi

if [ ".$apache_osu" = . ]; then
    apache_osu=$apache_uid
    /usr/sbin/useradd -c "Apache" -u $apache_osu -g apache \
        -s $useshell -d "$INSTALL_ROOT/var/www" apache  2> /dev/null || true
    if [ $? -eq 0 ]; then
        echo "Apache user  (id=$apache_osu) created."
    fi
else
    echo "Apache user  (id=$apache_osu) already exists."
fi

createbasedir /var/log/httpd
createbasedir /var/cache/mod_ssl
createbasedir /var/cache/mod_proxy
createbasedir /var/lock/subsys

setattributes 0700 apache $SUGID /var/cache/mod_ssl
for i in dir pag sem
do
    if [ ! -f /var/cache/mod_ssl/scache.$i ]; then
        touch /var/cache/mod_ssl/scache.$i
        setattributes 0600 apache $SUGID /var/cache/mod_ssl/scache.$i
    fi
done
setattributes 0700 apache $SUGID /var/cache/mod_proxy
setattributes 0700 root $SUGID /var/log/httpd
setattributes 4510 root apache $INSTALL_ROOT/sbin/suexec

(
    sslcert="$INSTALL_ROOT/etc/ssl/certs/localhost.crt"
    sslpkey="$INSTALL_ROOT/etc/ssl/private/localhost.key"
    sserial=$RANDOM
    if [ ".$sserial" = . ]; then
        sserial=$$
    fi
    umask 077
    if [ ! -f "$sslpkey" ] ; then
        $XBECHO "Generating private RSA key ... "
        $INSTALL_ROOT/bin/openssl genrsa -rand 1024 > "$sslpkey" 2> /dev/null
        if [ $? -eq 0 ]; then echo "OK" ; else echo "Failed: -$?" ; fi
    fi
    FQDN=`hostname`
    if [ ".$FQDN" = . ]; then
        FQDN=localhost.localdomain
    fi

    if [ ! -f "$sslcert" ] ; then
        $XBECHO "Generating new $FQDN certificate ... "
        cat << EOF | $INSTALL_ROOT/bin/openssl req -new -key "$sslpkey" \
            -x509 -days 365 -set_serial $sserial \
            -out "$sslcert" 2>/dev/null
--
SomeState
SomeCity
SomeOrganization
SomeOrganizationalUnit
$FQDN
root@$FQDN
EOF
        if [ $? -eq 0 ]; then echo "OK" ; else echo "Failed: -$?" ; fi
    fi
)

(
    # Copy .in files preserving existing
    cd "$INSTALL_ROOT/etc/httpd/conf.d"
    for f in ssl.conf welcome.conf manual.conf proxy_ajp.conf
    do
        copynoreplace $f
    done
    copynoreplace "$INSTALL_ROOT/etc/httpd/conf/httpd.conf"
    copynoreplace "$INSTALL_ROOT/etc/mime.types"
    copynoreplace "$INSTALL_ROOT/etc/sysconfig/httpd"
    copynoreplace "$INSTALL_ROOT/etc/logrotate.d/httpd"
)


sed "s;\/opt\/redhat\/ews;$INSTALL_ROOT;g" "$INSTALL_ROOT/sbin/apachectl" > "$INSTALL_ROOT/sbin/apachectl.new"
mv "$INSTALL_ROOT/sbin/apachectl.new" "$INSTALL_ROOT/sbin/apachectl"
chmod 755 "$INSTALL_ROOT/sbin/apachectl"


#
# RHATews Apache Tomcat5 post install script
#
tomcat_uid=91

# Add the "tomcat" user
useshell="/bin/sh"

tomcat_osu="`id -u tomcat 2>/dev/null`"
tomcat_osg="`id -g tomcat 2>/dev/null`"
if [ ".$tomcat_osg" = . ]; then
    tomcat_osg=$tomcat_uid
    /usr/sbin/groupadd -g $tomcat_osg tomcat 2> /dev/null
    if [ $? -eq 0 ]; then
        echo "Tomcat group (id=$tomcat_osg) created."
    fi
else
    echo "Tomcat group (id=$tomcat_osu) already exists."
fi

if [ ".$tomcat_osu" = . ]; then
    tomcat_osu=$tomcat_uid
    /usr/sbin/useradd -c "Apache Tomcat" -u $tomcat_osu -g tomcat \
        -s $useshell -d "$INSTALL_ROOT/share/tomcat5" tomcat  2> /dev/null
    if [ $? -eq 0 ]; then
        echo "Tomcat user  (id=$tomcat_osu) created."
    fi
else
    echo "Tomcat user  (id=$tomcat_osu) already exists."
fi

if [ ".$JAVA_HOME" = . ]; then
    check_java_home=yes
else
    echo "Adding JAVA_HOME=$JAVA_HOME to the configuration"
    cat << EOS >> $INSTALL_ROOT/etc/sysconfig/tomcat5

#
# Added by postinstall script
JAVA_HOME="$JAVA_HOME"

EOS
fi

createbasedir /var/log/tomcat5
for i in temp work
do
    createbasedir /var/cache/tomcat5/$i
    dirattributes 0775 root tomcat /var/cache/tomcat5/$i
done
dirattributes 0775 root tomcat /var/cache/tomcat5
setattributes 0775 root tomcat /var/log/tomcat5
setattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat5
dirattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat5/webapps
dirattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat5/server/webapps
dirattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat5/conf
dirattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat5/conf/Catalina
setattributes 0660 root tomcat $INSTALL_ROOT/share/tomcat5/conf/tomcat-users.xml

if [ -d "$INSTALL_ROOT/share/tomcat5" ]; then
    cd "$INSTALL_ROOT/share/tomcat5"
    createsymlink /var/log/tomcat5 logs
    createsymlink /var/cache/tomcat5/temp temp
    createsymlink /var/cache/tomcat5/work work
fi
#
# RHATews Apache Tomcat6 post install script
#
if [ ".$tomcat_uid" = . ]; then
    tomcat_uid=91
    tomcat_uiv=true
else
    tomcat_uiv=false
fi

# Add the "tomcat" user
useshell="/bin/sh"

tomcat_osu="`id -u tomcat 2>/dev/null`"
tomcat_osg="`id -g tomcat 2>/dev/null`"
if [ ".$tomcat_osg" = . ]; then
    tomcat_osg=$tomcat_uid
    /usr/sbin/groupadd -g $tomcat_osg tomcat 2> /dev/null || true
    if [ $? -eq 0 ]; then
        echo "Tomcat group (id=$tomcat_osg) created."
    fi
elif $tomcat_uiv; then
    echo "Tomcat group (id=$tomcat_osu) already exists."
fi

if [ ".$tomcat_osu" = . ]; then
    tomcat_osu=$tomcat_uid
    /usr/sbin/useradd -c "Apache Tomcat" -u $tomcat_osu -g tomcat \
        -s $useshell -d "$INSTALL_ROOT/share/tomcat6" tomcat  2> /dev/null || true
    if [ $? -eq 0 ]; then
        echo "Tomcat  user (id=$tomcat_osu) created."
    fi
elif $tomcat_uiv; then
    echo "Tomcat user  (id=$tomcat_osu) already exists."
fi

if [ ".$JAVA_HOME" = . ]; then
    check_java_home=yes
else
    echo "Adding JAVA_HOME=$JAVA_HOME to the configuration ..."
    cat << EOS >> $INSTALL_ROOT/etc/sysconfig/tomcat6

#
# Added by postinstall script
JAVA_HOME="$JAVA_HOME"

EOS
fi

createbasedir /var/log/tomcat6
for i in temp work
do
    createbasedir /var/cache/tomcat6/$i
    dirattributes 0775 root tomcat /var/cache/tomcat6/$i
done
dirattributes 0775 root tomcat /var/cache/tomcat6
setattributes 0775 root tomcat /var/log/tomcat6
setattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat6
dirattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat6/webapps
dirattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat6/server/webapps
dirattributes 0775 root tomcat $INSTALL_ROOT/share/tomcat6/conf
setattributes 0660 root tomcat $INSTALL_ROOT/share/tomcat6/conf/tomcat-users.xml
if [ -d "$INSTALL_ROOT/share/tomcat6" ]; then
    cd "$INSTALL_ROOT/share/tomcat6"
    createsymlink /var/log/tomcat6 logs
    createsymlink /var/cache/tomcat6/temp temp
    createsymlink /var/cache/tomcat6/work work
fi
#
# Configure Solaris runtime linker environment
#
if [ -x /usr/bin/crle ]; then
    /usr/bin/crle -u -l $INSTALL_ROOT/lib64
fi

if [ "$check_java_home" = "yes" ]; then
    if [ ".$JAVA_HOME" = . ]; then
        echo ""

        echo "-----------------------------------------------------------------------"
        echo " NOTICE"
        echo "-----------------------------------------------------------------------"
        echo ""
        echo " JAVA_HOME environment variable is not set."
        echo " Either set the  JAVA_HOME  or edit the configuration"
        echo " scripts inside \`$INSTALL_ROOT/etc/sysconfig' directory"
        echo " and set the JAVA_HOME to the installed JDK location."
        echo ""
    fi
fi

# End of RHATews Post install script
